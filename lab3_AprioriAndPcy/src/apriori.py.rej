diff a/lab3_AprioriAndPcy/src/apriori.py b/lab3_AprioriAndPcy/src/apriori.py	(rejected hunks)
@@ -20,13 +20,30 @@
                     item_count[item] = 1
 
     for k, v in item_count.items():
-        support = v / len(data)
+        support = v / 1000
         if support >= min_support:
             Lk.add(k)
             frequent_item_count[k] = support
 
     return Lk, frequent_item_count
 
+def Ck_support(data, Ck):
+    item_count = {}
+
+    for basket in data:
+        for item in Ck:
+            if item.issubset(basket):
+                if item in item_count:
+                    item_count[item] = item_count[item] + 1
+                else:
+                    item_count[item] = 1
+
+    for k, v in item_count.items():
+        support = v / 1000
+        item_count[k] = support
+
+    return item_count
+
 def generate_Ck_next(Lk, k):
     Ck_next = set()
     for s1 in Lk:
